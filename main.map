{"version":3,"file":"/Users/gsoed/proj/spies/main.js","sources":["@traceur/generated/TemplateParser/3","/Users/gsoed/proj/spies/src/fakes.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/6","/Users/gsoed/proj/spies/src/matcher/matcher.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","/Users/gsoed/proj/spies/src/matcher/any.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","/Users/gsoed/proj/spies/src/matcher/isa.js","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","/Users/gsoed/proj/spies/src/matcher/matchers.js","/Users/gsoed/proj/spies/src/spiedfn.js","@traceur/generated/TemplateParser/13","/Users/gsoed/proj/spies/src/utils.js","@traceur/generated/TemplateParser/14","/Users/gsoed/proj/spies/src/spies.js","/Users/gsoed/proj/spies/src/main.js"],"names":[],"mappings":"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","sourceRoot":"/Users/gsoed/proj/spies/","sourcesContent":["var __moduleName = $__placeholder__0;","/**\n * Static class to create various fake objects.\n *\n * @class Fakes\n * @static\n */\nlet Fakes = {\n\n  /**\n   * Creates a fake of the given constructor. The fake object's proto link will simply point to the\n   * constructor's prototype.\n   *\n   * @method ofType\n   * @param {!Function} ctor The constructor of the object to create a fake of.\n   * @return {!Object} The fake object.\n   */\n  ofType(ctor) {\n    return Object.setPrototypeOf({} , ctor.prototype);\n  },\n\n  /**\n   * Creates a fake implementation of a NodeList.\n   *\n   * @method nodeList\n   * @param {!Array} data Array that represents the data in the NodeList.\n   * @return {!NodeList} A fake object mimicking a `NodeList`.\n   */\n  nodeList(data) {\n    return Object.setPrototypeOf({\n      length: data.length,\n      item(i) {\n        return data[i];\n      }\n    }, NodeList.prototype);\n  }\n};\n\nexport default Fakes;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Fakes = Fakes;\n","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__default = $__placeholder__0","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","var $__placeholder__0 = $__placeholder__1","/**\n * Base class for matcher objects. These allow you to store arguments that have been pass into a\n * gunction call.\n * \n * @class Matcher\n */\nexport default class Matcher {\n\n  /**\n   * @constructor\n   */\n  constructor() {\n\n    /**\n     * Array of recorded arguments that matches.\n     *\n     * @property matchingArgs\n     * @type Array\n     */\n    this.matchingArgs = [];\n  }\n\n  /**\n   * Checks if the given argument matches the matcher. If so, records the invocation.\n   * @param  {Object=} arg The argument to be checked.\n   * @return {boolean} True iff the given argument is a match.\n   * @method registerInvocation\n   */\n  registerInvocation(arg) {\n    if (this.matches(arg)) {\n      this.matchingArgs.push(arg);\n      return true;\n    }\n\n    return false;\n  }\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Matcher = Matcher;\n}","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","var $__default = $__placeholder__0","import Matcher from 'src/matcher/matcher';\n\n/**\n * Matches anything.\n * @class Any\n * @extends Matcher\n */\nexport default class Any extends Matcher {\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super.constructor();\n  }\n\n  /**\n   * @method matches\n   * @return {boolean} True. Always.\n   */\n  matches() {\n    return true;\n  }\n}","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","import Matcher from 'src/matcher/matcher';\n\nlet _expectedType = Symbol();\n\n/**\n * Matches arguments that is the instance of the given ctor, or has the expected type.\n * @class IsA\n * @extends Matcher\n */\nexport default class IsA extends Matcher {\n\n  /**\n   * @param {Function|string} expectedType If function, this will check if the argument is an \n   *     instance of it. If a string, this will check if typeof argument is the specified string.\n   * @constructor\n   */\n  constructor(expectedType) {\n    super.constructor();\n    this[_expectedType] = expectedType;\n  }\n\n  /**\n   * @param {Object} arg Object to be checked.\n   * @return {boolean} True iff the given argument is an instance of the constructor.\n   * @method matches\n   */\n  matches(arg) {\n    if (this[_expectedType] instanceof Function) {\n      return arg instanceof this[_expectedType];\n    } else {\n      return typeof arg === this[_expectedType];\n    }\n  }\n}","(typeof $__placeholder__0 === 'undefined' ?\n          'undefined' : $__placeholder__1)","$traceurRuntime.typeof($__placeholder__0)","import IsA from 'src/matcher/isa';\nimport Any from 'src/matcher/any';\n\n/**\n * Static class to create \"Matcher\" objects.\n *\n * @class Matchers\n * @static\n */\nlet Matchers = {\n\n  /**\n   * Creates a matcher that matches by type.\n   *\n   * @method isA\n   * @param {Function|string} expectedType Type to be checked.\n   * @return {IsA} The IsA matcher.\n   */\n  isA(expectedType) {\n    return new IsA(expectedType);\n  },\n\n  /**\n   * Creates a matcher that matches anything.\n   *\n   * @method any\n   * @return {Any} The Any matcher.\n   */\n  any() {\n    return new Any();\n  }\n};\n\nexport default Matchers;\n\nif (!window.spies) {\n  window.spies = {};\n}\n\nwindow.spies.Matchers = Matchers;\n","// symbols\nlet _scope = Symbol();\nlet _name = Symbol();\nlet _origFn = Symbol();\nlet _records = Symbol();\nlet _callOriginal = Symbol();\nlet _returnValue = Symbol();\n\n/**\n * Represents a function that is spied.\n * @class SpiedFn\n * @extends Function\n */\nexport default class SpiedFn extends Function {\n\n  /**\n   * @param {Object=} scope The scope that the function is in. If undefined, then the original \n   *     function will never be called and #restore will do nothing.\n   * @param {string=} name The name of the function that is spied, if scope is given.\n   * @constructor\n   */\n  constructor(scope, name) {\n    let origFn = scope ? scope[name] : null;\n\n    let f = Object.setPrototypeOf((...args) => {\n      f.record(args);\n      if (f[_callOriginal]) {\n        return origFn.apply(this, args);\n      }\n      return f[_returnValue];\n    }, SpiedFn.prototype);\n    f.constructor = SpiedFn;\n    f[_scope] = scope;\n    f[_name] = name;\n    f[_origFn] = origFn;\n    f[_callOriginal] = !!origFn;\n    f[_returnValue] = undefined;\n    f.records = [];\n\n    // Override the original function, if any.\n    if (scope) {\n      scope[name] = f;\n    }\n\n    return f;\n  }\n\n  /**\n   * Restores the spied function.\n   * @method restore\n   */\n  restore() {\n    if (this[_scope]) {\n      this[_scope][this[_name]] = this[_origFn];\n    }\n  }\n\n  /**\n   * Records a function call.\n   * \n   * @method record\n   * @param {Array} args Array containing arguments to the function call.\n   */\n  record(args) {\n    this.records.push(args);\n  }\n\n  /**\n   * Returns the given return value instead of the original function's.\n   *\n   * @method overrideReturn\n   * @param {Object=} returnValue Return value to return instead of calling the original function.\n   * @return {SpiedFn} The current object.\n   */\n  overrideReturn(returnValue) {\n    this[_callOriginal] = false;\n    this[_returnValue] = returnValue;\n    return this;\n  }\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.SpiedFn = SpiedFn;\n}\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","/**\n * Contains various utility functions.\n *\n * @class Utils\n * @static\n */\n\nimport Matcher from 'src/matcher/matcher';\n\n/**\n * Deep equals the two objects.\n *\n * @method deepEqual\n * @param  {Object} obj1 The first object to compare.\n * @param  {Object} obj2 The second object to compare.\n * @return {boolean} True iff the two objects are deeply equal.\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n\n  if (obj1 instanceof Matcher) {\n    return obj1.registerInvocation(obj2);\n  }\n\n  if (obj2 instanceof Matcher) {\n    return obj2.registerInvocation(obj1);\n  }\n\n  if (!(obj1 instanceof Object) || !(obj2 instanceof Object)) {\n    return obj1 === obj2;\n  }\n\n  if (obj1 instanceof Array && obj1.length !== obj2.length) {\n    return false;\n  }\n\n  for (var key in obj1) {\n    if (!deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Utils = {\n    deepEqual\n  };\n}","if (!$traceurRuntime.isSymbolString($__placeholder__0)) $__placeholder__1","import SpiedFn from 'src/spiedfn';\nimport { deepEqual } from 'src/utils';\n\nlet spiedFns = [];\n\n/**\n * Root object for the library.\n *\n * @class Spies\n * @static\n */\nlet Spies = {\n\n  /**\n   * Creates a stub for the given constructor or object. All functions will be replaced by a noop\n   * function.\n   *\n   * @method stub\n   * @param  {!Function|Object} ctor The constructor to be stubbed, or object.\n   * @return {!Object} The stub object.\n   */\n  stub(target) {\n    let source = (typeof target === 'function') ?\n        target.prototype : target;\n\n    let obj = Object.setPrototypeOf({}, source);\n    for (let prop in source) {\n      if (typeof source[prop] === 'function') {\n        obj[prop] = function() {};\n      } else if (typeof source[prop] === 'object') {\n        obj[prop] = this.stub(source[prop]);\n      }\n    }\n\n    return obj;\n  },\n\n  /**\n   * Spies the given function, or recursively all functions in the given object.\n   *\n   * @method spy\n   * @param {!Object} scope The Object to be spied on, or the object containing the function to \n   *     be spied on. \n   * @param {string=} name The name of the function to be spied on. If not specified, this will\n   *     spy all functions in the scope recursively.\n   * @return {Object|Function} The spied function, or the spied object.\n   */\n  spy(scope, name) {\n    if (name === undefined) {\n      // We are spying on an object.\n      for (let key in scope) {\n        if (scope[key] instanceof Function) {\n          this.spy(scope, key);\n        } else if (scope[key] instanceof Object) {\n          this.spy(scope[key], undefined);\n        }\n      }\n      return scope;\n    } else {\n      // We are spying on a function\n      let spiedFn = new SpiedFn(scope, name);\n      spiedFns.push(spiedFn);\n      return spiedFn;\n    }\n  },\n\n  /**\n   * Returns a function that returns the call count of the given target when called with the given\n   * arguments. For example: Spies.callCountOf(fn)(1, 2) returns the number of calls that function\n   * fn was called with arguments (1, 2).\n   *\n   * If the passed in function is not a spy, this will return 0.\n   *\n   * @method callCountOf\n   * @param {!Function} target The function whose call count should be returned.\n   * @return {!Function} Function that returns the call counts of the given function.\n   */\n  callCountOf(target) {\n    let record = target.records || [];\n    return (...args) => {\n      let invocations = record.filter(recordedArgs => {\n        return deepEqual(recordedArgs, args);\n      });\n      return invocations.length;\n    };\n  },\n\n  /**\n   * Returns the number of call counts for the target of any arguments.\n   *\n   * @method anyCallCountOf\n   * @param {!Function} target The function whose call count should be returned.\n   * @return {number} Number of invocations on the given function.\n   */\n  anyCallCountOf(target) {\n    return target.records.length;\n  },\n\n  /**\n   * Restores the given function or recursively all functions in the given object to its original\n   * implementation and removes all records related to it. Or, restores all known functions, if no\n   * arguments is given.\n   *\n   * @method reset\n   * @param {Function|Object|undefined} target The function or object to be reset, or undefined.\n   */\n  reset(target) {\n    if (!target) {\n      spiedFns.forEach(spiedFn => spiedFn.restore());\n      spiedFns = [];\n    } else if (target instanceof SpiedFn) {\n      target.restore();\n      spiedFns.splice(spiedFns.indexOf(target), 1);\n    } else if (target instanceof Function) {\n      // Do nothing, this is an unspied function.\n    } else {\n      // Go through every member of the object and resets it.\n      for (let key in target) {\n        this.reset(target[key]);\n      }\n    }\n  },\n\n  /**\n   * Creates a spied function.\n   *\n   * @method spiedFunction\n   * @return {SpiedFn} Spied function.\n   */\n  spiedFunction() {\n    let fn = new SpiedFn();\n    spiedFns.push(fn);\n    return fn;\n  }\n};\n\nexport default Spies;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Spies = Spies;\n","import Fakes from 'src/fakes';\nimport Spies from 'src/spies';\nimport Matchers from 'src/matcher/matchers';"]}