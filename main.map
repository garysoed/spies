{"version":3,"file":"/Users/gsoed/proj/spies/main.js","sources":["@traceur/generated/TemplateParser/3","/Users/gsoed/proj/spies/src/fakes.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","/Users/gsoed/proj/spies/src/matcher/matcher.js","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","/Users/gsoed/proj/spies/src/matcher/any.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","/Users/gsoed/proj/spies/src/matcher/isa.js","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","/Users/gsoed/proj/spies/src/matcher/matchers.js","/Users/gsoed/proj/spies/src/spiedfn.js","@traceur/generated/TemplateParser/13","/Users/gsoed/proj/spies/src/utils.js","@traceur/generated/TemplateParser/14","/Users/gsoed/proj/spies/src/spies.js","/Users/gsoed/proj/spies/src/main.js"],"names":[],"mappings":"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","sourceRoot":"/Users/gsoed/proj/spies/","sourcesContent":["var __moduleName = $__placeholder__0;","/**\n * Static class to create various fake objects.\n *\n * @class Fakes\n * @static\n */\nconst Fakes = {\n\n  /**\n   * Creates a fake of the given constructor. The fake object's proto link will simply point to the\n   * constructor's prototype.\n   *\n   * @method ofType\n   * @param {Function} ctor The constructor of the object to create a fake of.\n   * @return {Object} The fake object.\n   */\n  ofType(ctor) {\n    return Object.setPrototypeOf({} , ctor.prototype);\n  },\n\n  /**\n   * Creates a fake implementation of a NodeList.\n   *\n   * @method nodeList\n   * @param {Array} data Array that represents the data in the NodeList.\n   * @return {NodeList} A fake object mimicking a `NodeList`.\n   */\n  nodeList(data) {\n    return Object.setPrototypeOf({\n      length: data.length,\n      item(i) {\n        return data[i];\n      }\n    }, NodeList.prototype);\n  },\n\n  /**\n   * Creates a fake implementation of an Attr.\n   *\n   * @method attr\n   * @param {string} name Name of the attribute.\n   * @param {Object} [value] Value of the attribute.\n   * @return {Attr} A fake object mimicking an `Attr`.\n   */\n  attr(name, value) {\n    return Object.setPrototypeOf({\n      name,\n      value\n    }, Attr.prototype);\n  }\n};\n\nexport default Fakes;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Fakes = Fakes;\n","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__default = $__placeholder__0","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","\n\n// Private symbols.\nconst _MATCHING_ARGS = Symbol();\n\nexport default class Matcher {\n  /**\n   * Base class for matcher objects. These allow you to store arguments that have been pass into a\n   * gunction call.\n   *\n   * @constructor\n   * @class matcher.Matcher\n   */\n  constructor() {\n    this[_MATCHING_ARGS] = [];\n  }\n\n  /**\n   * Checks if the given argument matches the matcher. If so, records the invocation.\n   * @param  {Object} [arg] The argument to be checked.\n   * @return {boolean} True iff the given argument is a match.\n   * @method registerInvocation\n   */\n  registerInvocation(arg) {\n    if (this.matches(arg)) {\n      this.matchingArgs.push(arg);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Array of recorded arguments that matches\n   *\n   * @property matchingArgs\n   * @type Array\n   * @readOnly\n   */\n  get matchingArgs() {\n    return this[_MATCHING_ARGS];\n  }\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Matcher = Matcher;\n}","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","var $__default = $__placeholder__0","import Matcher from 'src/matcher/matcher';\n\n\nexport default class Any extends Matcher {\n\n  /**\n   * Matches anything.\n   * @class matcher.Any\n   * @constructor\n   * @extends matcher.Matcher\n   */\n  constructor() {\n    super.constructor();\n  }\n\n  /**\n   * @method matches\n   * @return {boolean} True. Always.\n   */\n  matches() {\n    return true;\n  }\n}","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","import Matcher from 'src/matcher/matcher';\n\n// Private symbols.\nconst _EXPECTED_TYPE = Symbol();\n\nexport default class IsA extends Matcher {\n  /**\n   * Matches arguments that is the instance of the given ctor, or has the expected type.\n   * @constructor\n   * @param {Function|string} expectedType If function, this will check if the argument is an \n   *     instance of it. If a string, this will check if typeof argument is the specified string.\n   * @class matcher.IsA\n   * @extends matcher.Matcher\n   */\n  constructor(expectedType) {\n    super.constructor();\n    this[_EXPECTED_TYPE] = expectedType;\n  }\n\n  /**\n   * @method matches\n   * @param {Object} arg Object to be checked.\n   * @return {boolean} True iff the given argument is an instance of the constructor.\n   */\n  matches(arg) {\n    if (this[_EXPECTED_TYPE] instanceof Function) {\n      return arg instanceof this[_EXPECTED_TYPE];\n    } else {\n      return typeof arg === this[_EXPECTED_TYPE];\n    }\n  }\n}","(typeof $__placeholder__0 === 'undefined' ?\n          'undefined' : $__placeholder__1)","$traceurRuntime.typeof($__placeholder__0)","import IsA from 'src/matcher/isa';\nimport Any from 'src/matcher/any';\n\n/**\n * Static class to create \"Matcher\" objects.\n *\n * @class Matchers\n * @static\n */\nconst Matchers = {\n\n  /**\n   * Creates a matcher that matches by type.\n   *\n   * @method isA\n   * @param {Function|string} expectedType Type to be checked.\n   * @return {matcher.IsA} The IsA matcher.\n   */\n  isA(expectedType) {\n    return new IsA(expectedType);\n  },\n\n  /**\n   * Creates a matcher that matches anything.\n   *\n   * @method any\n   * @return {matcher.Any} The Any matcher.\n   */\n  any() {\n    return new Any();\n  }\n};\n\nexport default Matchers;\n\nif (!window.spies) {\n  window.spies = {};\n}\n\nwindow.spies.Matchers = Matchers;\n","/**\n * Represents a function that is spied.\n * @class SpiedFn\n * @extends Function\n */\n\n// Private symbols\nconst _CALL_ORIGINAL = Symbol();\nconst _NAME = Symbol();\nconst _ORIG_FN = Symbol();\nconst _RECORDS = Symbol();\nconst _RETURN_VALUE = Symbol();\nconst _SCOPE = Symbol();\n\nlet timestamp = 0;\n\nexport default class SpiedFn extends Function {\n\n  /**\n   * @param {Object} [scope] The scope that the function is in. If undefined, then the original \n   *     function will never be called and #restore will do nothing.\n   * @param {string} [name] The name of the function that is spied, if scope is given.\n   * @class SpiedFn\n   * @constructor\n   */\n  constructor(scope, name) {\n    let origFn = scope ? scope[name] : null;\n\n    let f = Object.setPrototypeOf(function(...args) {\n      f.record(args);\n      if (f[_CALL_ORIGINAL]) {\n        return origFn.apply(this, args);\n      }\n      return f[_RETURN_VALUE];\n    }, SpiedFn.prototype);\n    f.constructor = SpiedFn;\n    f[_SCOPE] = scope;\n    f[_NAME] = name;\n    f[_ORIG_FN] = origFn;\n    f[_CALL_ORIGINAL] = !!origFn;\n    f[_RETURN_VALUE] = undefined;\n    f[_RECORDS] = [];\n\n    // Override the original function, if any.\n    if (scope) {\n      scope[name] = f;\n    }\n\n    return f;\n  }\n\n  /**\n   * Restores the spied function.\n   * @method restore\n   */\n  restore() {\n    if (this[_SCOPE]) {\n      this[_SCOPE][this[_NAME]] = this[_ORIG_FN];\n    }\n  }\n\n  /**\n   * Records a function call.\n   * \n   * @method record\n   * @param {Array} args Array containing arguments to the function call.\n   */\n  record(args) {\n    timestamp++;\n    this.records.push({timestamp, args});\n  }\n\n  /**\n   * Returns the given return value instead of the original function's.\n   *\n   * @method overrideReturn\n   * @param {Object} [returnValue] Return value to return instead of calling the original function.\n   * @return {SpiedFn} The current object.\n   */\n  overrideReturn(returnValue) {\n    this[_CALL_ORIGINAL] = false;\n    this[_RETURN_VALUE] = returnValue;\n    return this;\n  }\n\n  /**\n   * Array of record objects, each containing an invocation for the function. Each \n   * invocation is a mapping of timestamp -> array of arguments used to invoke it.\n   * \n   * @property records\n   * @type Array\n   * @readonly\n   */\n  get records() {\n    return this[_RECORDS];\n  }\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.SpiedFn = SpiedFn;\n}\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","import Matcher from 'src/matcher/matcher';\n\n/**\n * Contains various utility functions.\n *\n * @class Utils\n * @static\n */\n\n/**\n * Deep equals the two objects.\n *\n * @method deepEqual\n * @param  {Object} obj1 The first object to compare.\n * @param  {Object} obj2 The second object to compare.\n * @return {boolean} True iff the two objects are deeply equal.\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n\n  if (obj1 instanceof Matcher) {\n    return obj1.registerInvocation(obj2);\n  }\n\n  if (obj2 instanceof Matcher) {\n    return obj2.registerInvocation(obj1);\n  }\n\n  if (!(obj1 instanceof Object) || !(obj2 instanceof Object)) {\n    return obj1 === obj2;\n  }\n\n  if (obj1 instanceof Function) {\n    return obj1 === obj2;\n  }\n\n  if (obj1 instanceof Array && obj1.length !== obj2.length) {\n    return false;\n  }\n\n  for (var key in obj1) {\n    if (!deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Utils = {\n    deepEqual\n  };\n}","if (!$traceurRuntime.isSymbolString($__placeholder__0)) $__placeholder__1","import SpiedFn       from 'src/spiedfn';\nimport { deepEqual } from 'src/utils';\n\n/**\n * Root object for the library.\n *\n * @class Spies\n * @static\n */\n\nlet spiedFns = [];\n\nconst Spies = {\n\n  /**\n   * Creates a stub for the given constructor or object. All functions will be replaced by a noop\n   * function.\n   *\n   * @method stub\n   * @param  {Function|Object} ctor The constructor to be stubbed, or object.\n   * @return {Object} The stub object.\n   */\n  stub(target) {\n    let source = (typeof target === 'function') ?\n        target.prototype : target;\n\n    let obj = Object.setPrototypeOf({}, source);\n    for (let prop in source) {\n      if (typeof source[prop] === 'function') {\n        obj[prop] = function() {};\n      } else if (typeof source[prop] === 'object') {\n        obj[prop] = this.stub(source[prop]);\n      }\n    }\n\n    return obj;\n  },\n\n  /**\n   * Spies the given function, or recursively all functions in the given object.\n   *\n   * @method spy\n   * @param {Object} scope The Object to be spied on, or the object containing the function to \n   *     be spied on. \n   * @param {string} [name] The name of the function to be spied on. If not specified, this will\n   *     spy all functions in the scope recursively.\n   * @return {Object|Function} The spied function, or the spied object.\n   */\n  spy(scope, name) {\n    if (name === undefined) {\n      // We are spying on an object.\n      for (let key in scope) {\n        if (scope[key] instanceof Function) {\n          this.spy(scope, key);\n        } else if (scope[key] instanceof Object) {\n          this.spy(scope[key], undefined);\n        }\n      }\n      return scope;\n    } else {\n      // We are spying on a function\n      let spiedFn = new SpiedFn(scope, name);\n      spiedFns.push(spiedFn);\n      return spiedFn;\n    }\n  },\n\n  /**\n   * Returns a function that returns the call count of the given target when called with the given\n   * arguments. For example: `Spies.callCountOf(fn)(1, 2)` returns the number of calls that function\n   * fn was called with arguments `(1, 2)`.\n   *\n   * If the passed in function is not a spy, this will return 0.\n   *\n   * @method callCountOf\n   * @param {SpiedFn} target The function whose call count should be returned.\n   * @return {Function} Function that returns the call counts of the given function.\n   */\n  callCountOf(target) {\n    return (...args) => {\n      return Spies.invocationsOf(target).apply(target, args).length;\n    };\n  },\n\n  /**\n   * Returns a function that returns the invocations of the given target when called with the given\n   * arguments. For example: `Spies.invocationsOf(fn)(1, 2)` returns an array of invocations\n   * matching when `fn` is called with arguments `(1, 2)`.\n   *\n   * An invocation object consists of two values:\n   * - `timestamp`: This is the timestamp of the call. This only determines ordering, not actual \n   *   time.\n   * - `args`: This is an array of arguments that the function received at that time.\n   *\n   * @method invocationsOf\n   * @param {SpiedFn} target The function whose invocations should be returned.\n   * @return {Function} Function thar returns the invocations of the given function.\n   */\n  invocationsOf(target) {\n    let records = target.records || [];\n    return (...args) => {\n      let invocations = records.filter(record => {\n        return deepEqual(record.args, args);\n      });\n      return invocations;\n    };\n  },\n\n  /**\n   * Returns the number of call counts for the target of any arguments.\n   *\n   * @method anyCallCountOf\n   * @param {Function} target The function whose call count should be returned.\n   * @return {number} Number of invocations on the given function.\n   */\n  anyCallCountOf(target) {\n    return target.records.length;\n  },\n\n  /**\n   * Restores the given function or recursively all functions in the given object to its original\n   * implementation and removes all records related to it. Or, restores all known functions, if no\n   * arguments is given.\n   *\n   * @method reset\n   * @param {Function|Object} [target] The function or object to be reset.\n   */\n  reset(target) {\n    if (!target) {\n      spiedFns.forEach(spiedFn => spiedFn.restore());\n      spiedFns = [];\n    } else if (target instanceof SpiedFn) {\n      target.restore();\n      spiedFns.splice(spiedFns.indexOf(target), 1);\n    } else if (target instanceof Function) {\n      // Do nothing, this is an unspied function.\n    } else {\n      // Go through every member of the object and resets it.\n      for (let key in target) {\n        this.reset(target[key]);\n      }\n    }\n  },\n\n  /**\n   * Creates a spied function.\n   *\n   * @method spiedFunction\n   * @return {SpiedFn} Spied function.\n   */\n  spiedFunction() {\n    let fn = new SpiedFn();\n    spiedFns.push(fn);\n    return fn;\n  }\n};\n\nexport default Spies;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Spies = Spies;\n","import Fakes from 'src/fakes';\nimport Spies from 'src/spies';\nimport Matchers from 'src/matcher/matchers';\n"]}