{"version":3,"file":"/Users/gsoed/proj/spies/main.js","sources":["@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/4","/Users/gsoed/proj/spies/src/fakes.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/7","/Users/gsoed/proj/spies/src/matcher/matcher.js","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/6","/Users/gsoed/proj/spies/src/matcher/any.js","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/11","/Users/gsoed/proj/spies/src/matcher/isa.js","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/13","/Users/gsoed/proj/spies/src/matcher/matchers.js","/Users/gsoed/proj/spies/src/spiedfn.js","@traceur/generated/TemplateParser/15","/Users/gsoed/proj/spies/src/utils.js","@traceur/generated/TemplateParser/16","/Users/gsoed/proj/spies/src/spies.js","/Users/gsoed/proj/spies/src/main.js"],"names":[],"mappings":";;AAAA,AAAI,IAAA,CAAA,YAAW,cAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,aAAoB,KAAG,CAAC,CAAC;EACzD;ACMF,ADNE,ICMF,CAAA,KAAI,EAAI;AAUV,SAAK,CAAL,UAAO,IAAG,CAAG;AACX,WAAO,EACL,SAAQ,CAAG,CAAA,IAAG,UAAU,CAC1B,CAAA;IACF;AASA,WAAO,CAAP,UAAS,IAAG;AACV,WAAO;AACL,aAAK,CAAG,CAAA,IAAG,OAAO;AAClB,WAAG,CAAH,UAAK,CAAA;AACH,eCnCR,CDmCe,IAAG,CCnCA,eAAc,WAAW,AAAC,CDmCxB,CAAA,CCnC0C,CAAC,CDmCzC;QAChB;AACA,gBAAQ,CAAG,CAAA,QAAO,UAAU;AAAA,MAC9B,CAAC;IACH;EACF,CAAC;AExCD,AAAI,IAAA,CAAA,UAAS,EF0CE,MAAI,AE1Cc,CAAA;AF4CjC,KAAI,CAAC,MAAK,MAAM,CAAG;AACjB,SAAK,MAAM,EAAI,GAAC,CAAC;EACnB;AAAA,AACA,OAAK,MAAM,MAAM,EAAI,MAAI,CAAC;AG/C1B,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,wBAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,uBAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,AMFF,IAAA,UCMW,SAAM,QAAM,CAKd,AAAC,CAAE;AAQZ,OAAG,aAAa,EAAI,GAAC,CAAC;EACxB,ADpBsC,CAAA;AEAxC,EAAC,eAAc,YAAY,CAAC,AAAC,WD4B3B,kBAAiB,CAAjB,UAAmB,GAAE,CAAG;AACtB,SAAI,IAAG,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAG;AACrB,WAAG,aAAa,KAAK,AAAC,CAAC,GAAE,CAAC,CAAC;AAC3B,aAAO,KAAG,CAAC;MACb;AAAA,AAEA,WAAO,MAAI,CAAC;IACd,MCnCmF;ACArF,AAAI,IAAA,CAAA,UAAS,UAAoB,CAAA;AFoChC,EAAA;AAED,KAAI,MAAK,UAAU,CAAG;AACpB,OAAI,CAAC,MAAK,MAAM,CAAG;AACjB,WAAK,MAAM,EAAI,GAAC,CAAC;IACnB;AAAA,AAEA,SAAK,MAAM,QAAQ,EAAI,QAAM,CAAC;EAChC;AAAA,AH5CA,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,oBAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,mBAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IUFC,QAAM;AJAb,AAAI,IAAA,MIOW,SAAM,IAAE,CAKV,AAAC,CAAE;AACZ,ACbJ,kBAAc,SAAS,AAAC,qCAAwD,KCA3D,MAAmB,CFajB;EACrB,AJdsC,CAAA;AOAxC,AAAI,IAAA,WAAoC,CAAA;ACAxC,EAAC,eAAc,YAAY,CAAC,AAAC,OJoB3B,OAAM,CAAN,UAAO,AAAC,CAAE;AACR,WAAO,KAAG,CAAC;IACb,MAf+B,QAAM,CINiB;ALDxD,AAAI,IAAA,CAAA,UAAS,MAAoB,CAAA;ALAjC,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,oBAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,mBAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IeFC,QAAM;AAEb,AAAI,IAAA,CAAA,aAAY,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;ATF5B,AAAI,IAAA,MSSW,SAAM,IAAE,CAOT,YAAW;AACrB,AJjBJ,kBAAc,SAAS,AAAC,qCAAwD,KCA3D,MAAmB,CGiBjB;AACnB,OAAG,CblBW,eAAc,WAAW,AAAC,CakBnC,aAAY,CblByC,CAAC,EakBrC,aAAW,CAAC;EAetC,ATjCwC,CAAA;AOAxC,AAAI,IAAA,WAAoC,CAAA;ACAxC,EAAC,eAAc,YAAY,CAAC,AAAC,OC0B3B,OAAM,CAAN,UAAQ,GAAE;AACR,SAAI,IAAG,Cb3BO,eAAc,WAAW,AAAC,Ca2B/B,aAAY,Cb3BqC,CAAC,Wa2BxB,SAAO,CAAG;AAC3C,aAAO,CAAA,GAAE,Wb5Bf,Ca4B4B,IAAG,Cb5Bb,eAAc,WAAW,AAAC,Ca4BX,aAAY,Cb5BiB,Ca4BhB,Ab5BiB,Ca4BhB;MAC3C,KAAO;AACL,aAAO,CC9Bb,CAAC,MD8BmB,IAAE,CC9BE,GAAM,YAAU,CAAA,CAC9B,YAAU,ECDpB,CAAA,eAAc,OAAO,AAAC,CF8BF,GAAE,CE9BkB,ADCA,CAAC,IdDzC,Ca8B4B,IAAG,Cb9Bb,eAAc,WAAW,AAAC,Ca8BX,aAAY,Cb9BiB,Ca8BhB,Ab9BiB,Ca8BhB;MAC3C;AAAA,IACF,MAvB+B,QAAM,CDRiB;ALDxD,AAAI,IAAA,CAAA,UAAS,MAAoB,CAAA;ALAjC,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,yBAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,wBAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IkBFC,IAAE;IACF,IAAE;AAQT,AAAI,IAAA,CAAA,QAAO,EAAI;AASb,MAAE,CAAF,UAAI,YAAW,CAAG;AAChB,WAAO,IAAI,IAAE,AAAC,CAAC,YAAW,CAAC,CAAC;IAC9B;AAKA,MAAE,CAAF,UAAG,AAAC,CAAE;AACJ,WAAO,IAAI,IAAE,AAAC,EAAC,CAAC;IAClB;AAAA,EACF,CAAC;Af5BD,AAAI,IAAA,CAAA,UAAS,Ee8BE,SAAO,Af9BW,CAAA;AegCjC,KAAI,CAAC,MAAK,MAAM,CAAG;AACjB,SAAK,MAAM,EAAI,GAAC,CAAC;EACnB;AAAA,AAEA,OAAK,MAAM,SAAS,EAAI,SAAO,CAAC;AdpChC,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,gBAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,eAAoB,KAAG,CAAC,CAAC;EACzD;AmBDF,AnBCE,ImBDF,CAAA,MAAK,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AACrB,AAAI,IAAA,CAAA,KAAI,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AACpB,AAAI,IAAA,CAAA,OAAM,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AACtB,AAAI,IAAA,CAAA,QAAO,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AACvB,AAAI,IAAA,CAAA,aAAY,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AAC5B,AAAI,IAAA,CAAA,YAAW,EAAI,CAAA,MAAK,AAAC,EAAC,CAAC;AbN3B,AAAI,IAAA,UaaW,SAAM,QAAM,CAQb,KAAI,CAAG,CAAA,IAAG;AACpB,AAAI,MAAA,CAAA,MAAK,EAAI,CAAA,KAAI,EjBtBrB,CiBsByB,KAAI,CjBtBX,eAAc,WAAW,AAAC,CiBsBb,IAAG,CjBtB4B,CAAC,EiBsBxB,KAAG,CAAC;AAEvC,AAAI,MAAA,CAAA,CAAA,EAAI,UAAS,AAAM;ACvBf,UAAS,GAAA,OAAoB,GAAC;AAAG,eAAoB,EAAA,CAChD,OAAoB,CAAA,SAAQ,OAAO,CAAG,OAAkB;AAC3D,AlBHd,YAAkB,eAAc,WAAW,AAAC,MAAkB,CAAC,EAA/D,CkBGqD,SAAQ,ClBH3C,eAAc,WAAW,AAAC,MAAkB,CkBGkB,AlBHjB,CkBGkB;ADsB3E,ACtB2E,MDsB3E,OAAO,AAAC,CAAC,IAAG,CAAC,CAAC;AACd,SAAI,AjB1BV,CiB0BU,CjB1BQ,eAAc,WAAW,AAAC,CiB0BhC,aAAY,CjB1BsC,CAAC,CiB0BnC;AACpB,aAAO,CAAA,MAAK,MAAM,AAAC,CAAC,IAAG,CAAG,KAAG,CAAC,CAAC;MACjC;AAAA,AACA,WjB7BN,CiB6Ba,CAAA,CjB7BK,eAAc,WAAW,AAAC,CiB6B7B,YAAW,CjB7BoC,CAAC,CiB6BnC;IACxB,CAAC;AACD,IAAA,UAAU,EAAI,mBAAgB,CAAC;AAC/B,IAAA,YAAY,WAAU,CAAC;AACvB,IAAA,CjBjCc,eAAc,WAAW,AAAC,CiBiCtC,MAAK,CjBjCmD,CAAC,EiBiC/C,MAAI,CAAC;AACjB,IAAA,CjBlCc,eAAc,WAAW,AAAC,CiBkCtC,KAAI,CjBlCoD,CAAC,EiBkChD,KAAG,CAAC;AACf,IAAA,CjBnCc,eAAc,WAAW,AAAC,CiBmCtC,OAAM,CjBnCkD,CAAC,EiBmC9C,OAAK,CAAC;AACnB,IAAA,CjBpCc,eAAc,WAAW,AAAC,CiBoCtC,aAAY,CjBpC4C,CAAC,EiBoCxC,EAAC,CAAC,MAAK,CAAC;AAC3B,IAAA,CjBrCc,eAAc,WAAW,AAAC,CiBqCtC,YAAW,CjBrC6C,CAAC,EiBqCzC,UAAQ,CAAC;AAC3B,IAAA,QAAQ,EAAI,GAAC,CAAC;AAGd,OAAI,KAAI,CAAG;AACT,UAAI,CjB1CQ,eAAc,WAAW,AAAC,CiB0ChC,IAAG,CjB1C+C,CAAC,EiB0C3C,EAAA,CAAC;IACjB;AAAA,AAEA,SAAO,EAAA,CAAC;EAiCZ,Ab9EwC,CAAA;AOAxC,AAAI,IAAA,mBAAoC,CAAA;ACAxC,EAAC,eAAc,YAAY,CAAC,AAAC;AKoD3B,UAAM,CAAN,UAAO,AAAC;AACN,SAAI,AjBrDR,IiBqDW,CjBrDO,eAAc,WAAW,AAAC,CiBqD/B,MAAK,CjBrD4C,CAAC,CiBqDzC;AAChB,WAAG,CjBtDS,eAAc,WAAW,AAAC,CiBsDjC,MAAK,CjBtD8C,CAAC,CAA7C,eAAc,WAAW,AAAC,CiBsDzB,AjBtDnB,IiBsDsB,CjBtDJ,eAAc,WAAW,AAAC,CiBsDpB,KAAI,CjBtDkC,CAAC,CAAD,CAAC,EAA/D,CiBsDkC,IAAG,CjBtDnB,eAAc,WAAW,AAAC,CiBsDL,OAAM,CjBtDiB,CiBsDhB,AjBtDiB,CiBsDhB;MAC3C;AAAA,IACF;AAQA,SAAK,CAAL,UAAO,IAAG,CAAG;AACX,SAAG,QAAQ,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;IACzB;AAQA,iBAAa,CAAb,UAAe,WAAU;AACvB,SAAG,CjB3EW,eAAc,WAAW,AAAC,CiB2EnC,aAAY,CjB3EyC,CAAC,EiB2ErC,MAAI,CAAC;AAC3B,SAAG,CjB5EW,eAAc,WAAW,AAAC,CiB4EnC,YAAW,CjB5E0C,CAAC,EiB4EtC,YAAU,CAAC;IAClC;OAhEmC,SAAO,CLZY;ALDxD,AAAI,IAAA,CAAA,UAAS,UAAoB,CAAA;AUgFjC,KAAI,MAAK,UAAU,CAAG;AACpB,OAAI,CAAC,MAAK,MAAM,CAAG;AACjB,WAAK,MAAM,EAAI,GAAC,CAAC;IACnB;AAAA,AAEA,SAAK,MAAM,QAAQ,EAAI,QAAM,CAAC;EAChC;AAAA,AftFA,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,cAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,aAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IqBEC,QAAM;AASN,SAAS,UAAQ,CAAE,IAAG,CAAG,CAAA,IAAG;AACjC,OAAI,IAAG,IAAM,KAAG,CAAG;AACjB,WAAO,KAAG,CAAC;IACb;AAAA,AAEA,OAAI,IAAG,WAAa,QAAM,CAAG;AAC3B,WAAO,CAAA,IAAG,mBAAmB,AAAC,CAAC,IAAG,CAAC,CAAC;IACtC;AAAA,AAEA,OAAI,IAAG,WAAa,QAAM,CAAG;AAC3B,WAAO,CAAA,IAAG,mBAAmB,AAAC,CAAC,IAAG,CAAC,CAAC;IACtC;AAAA,AAEA,OAAI,CAAC,CAAC,IAAG,WAAa,OAAK,CAAC,CAAA,EAAK,EAAC,CAAC,IAAG,WAAa,OAAK,CAAC,CAAG;AAC1D,WAAO,CAAA,IAAG,IAAM,KAAG,CAAC;IACtB;AAAA,AAEA,OAAI,IAAG,WAAa,MAAI,CAAA,EAAK,CAAA,IAAG,OAAO,IAAM,CAAA,IAAG,OAAO,CAAG;AACxD,WAAO,MAAI,CAAC;IACd;AAAA,AAEA,QAAS,GAAA,CAAA,GAAE,CAAA,EAAK,KAAG;AClCrB,SAAI,CAAC,eAAc,eAAe,AAAC,KAAkB,CDkC7B;AACpB,WAAI,CAAC,SAAQ,AAAC,CAAC,AnBnCnB,ImBmCsB,CnBnCJ,eAAc,WAAW,AAAC,CmBmCpB,GAAE,CnBnCoC,CAAC,CAA/D,CmBmC8B,IAAG,CnBnCf,eAAc,WAAW,AAAC,CmBmCT,GAAE,CnBnCyB,CAAC,CmBmCxB,CAAG;AACpC,eAAO,MAAI,CAAC;QACd;AAAA,MACF;AACA,ACvCsE,SDuC/D,KAAG,CAAC;EACb;AAEA,KAAI,MAAK,UAAU,CAAG;AACpB,OAAI,CAAC,MAAK,MAAM,CAAG;AACjB,WAAK,MAAM,EAAI,GAAC,CAAC;IACnB;AAAA,AAEA,SAAK,MAAM,MAAM,EAAI,EACnB,SAAQ,CAAR,UAAQ,CACV,CAAA;EACF;AAAA,AjBlDA,SCAA,eAAwB;AAAE,sBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,cAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,aAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IuBFC,QAAM;IACJ,UAAQ;AAEjB,AAAI,IAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AAQjB,AAAI,IAAA,CAAA,KAAI,EAAI;AAUV,OAAG,CAAH,UAAK,MAAK;AACR,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,CAAC,MAAO,OAAK,CAAA,GAAM,WAAS,CAAC,EACpC,CAAA,MAAK,UAAU,EACf,OAAK,CAAC;AAEZ,AAAI,QAAA,CAAA,GAAE,EAAI,EAAE,SAAQ,CAAG,OAAK,CAAE,CAAC;AAC/B,qBAAiB,OAAK;AD3B1B,WAAI,CAAC,eAAc,eAAe,AAAC,MAAkB,CC2BxB;AACvB,aAAI,MAAO,ArB5BjB,OqB4BsB,CrB5BJ,eAAc,WAAW,AAAC,CqB4BpB,IAAG,CrB5BmC,CAAC,CqB4BnC,GAAM,WAAS,CAAG;AACtC,cAAE,CrB7BQ,eAAc,WAAW,AAAC,CqB6BhC,IAAG,CrB7B+C,CAAC,EqB6B3C,UAAQ,AAAC,CAAE,GAAC,CAAC;UAC3B,KAAO,KAAI,AN9BjB,eAAc,OAAO,AAAC,CM8BE,ArB9BxB,MqB8B6B,CrB9BX,eAAc,WAAW,AAAC,CqB8Bb,IAAG,CrB9B4B,CAAC,CeAvB,CAAA,GM8BC,SAAO,CAAG;AAC3C,cAAE,CrB/BQ,eAAc,WAAW,AAAC,CqB+BhC,IAAG,CrB/B+C,CAAC,EqB+B3C,CAAA,IAAG,KAAK,AAAC,CAAC,ArB/B9B,MqB+BmC,CrB/BjB,eAAc,WAAW,AAAC,CqB+BP,IAAG,CrB/BsB,CAAC,CqB+BrB,CAAC;UACrC;AAAA,QACF;AAEA,ADnCoE,WCmC7D,IAAE,CAAC;IACZ;AAYA,MAAE,CAAF,UAAI,KAAI,CAAG,CAAA,IAAG;AACZ,SAAI,IAAG,IAAM,UAAQ,CAAG;AAEtB,sBAAgB,MAAI;ADnD1B,aAAI,CAAC,eAAc,eAAe,AAAC,KAAkB,CCmDxB;AACrB,eAAI,KAAI,CrBpDE,eAAc,WAAW,AAAC,CqBoD1B,GAAE,CrBpD0C,CAAC,WqBoD7B,SAAO,CAAG;AAClC,iBAAG,IAAI,AAAC,CAAC,KAAI,CAAG,IAAE,CAAC,CAAC;YACtB,KAAO,KAAI,KAAI,CrBtDL,eAAc,WAAW,AAAC,CqBsDnB,GAAE,CrBtDmC,CAAC,WqBsDtB,OAAK,CAAG;AACvC,iBAAG,IAAI,AAAC,CAAC,ArBvDnB,KqBuDuB,CrBvDL,eAAc,WAAW,AAAC,CqBuDnB,GAAE,CrBvDmC,CAAC,CqBuDhC,UAAQ,CAAC,CAAC;YACjC;AAAA,UACF;AACA,AD1DkE,aC0D3D,MAAI,CAAC;MACd,KAAO;AAEL,AAAI,UAAA,CAAA,OAAM,EAAI,IAAI,QAAM,AAAC,CAAC,KAAI,CAAG,KAAG,CAAC,CAAC;AACtC,eAAO,KAAK,AAAC,CAAC,OAAM,CAAC,CAAC;AACtB,aAAO,QAAM,CAAC;MAChB;AAAA,IACF;AAaA,cAAU,CAAV,UAAY,MAAK;AACf,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,MAAK,QAAQ,GAAK,GAAC,CAAC;AACjC,aAAO,SAAC,AAAM;AH/EN,YAAS,GAAA,OAAoB,GAAC;AAAG,iBAAoB,EAAA,CAChD,OAAoB,CAAA,SAAQ,OAAO,CAAG,OAAkB;AAC3D,AlBHd,cAAkB,eAAc,WAAW,AAAC,MAAkB,CAAC,EAA/D,CkBGqD,SAAQ,ClBH3C,eAAc,WAAW,AAAC,MAAkB,CkBGkB,AlBHjB,CkBGkB;AG8EvE,AH9EuE,UG8EvE,CAAA,WAAU,EAAI,CAAA,MAAK,OAAO,AAAC,EAAC,SAAA,YAAW,CAAK;AAC9C,eAAO,CAAA,SAAQ,AAAC,CAAC,YAAW,CAAG,KAAG,CAAC,CAAC;QACtC,EAAC,CAAC;AACF,aAAO,CAAA,WAAU,OAAO,CAAC;MAC3B,EAAC;IACH;AASA,iBAAa,CAAb,UAAe,MAAK,CAAG;AACrB,WAAO,CAAA,MAAK,QAAQ,OAAO,CAAC;IAC9B;AAUA,QAAI,CAAJ,UAAM,MAAK;AACT,SAAI,CAAC,MAAK,CAAG;AACX,eAAO,QAAQ,AAAC,EAAC,SAAA,OAAM;eAAK,CAAA,OAAM,QAAQ,AAAC,EAAC;QAAA,EAAC,CAAC;AAC9C,eAAO,EAAI,GAAC,CAAC;MACf,KAAO,KAAI,MAAK,WAAa,QAAM,CAAG;AACpC,aAAK,QAAQ,AAAC,EAAC,CAAC;AAChB,eAAO,OAAO,AAAC,CAAC,QAAO,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAG,EAAA,CAAC,CAAC;MAC9C,KAAO,KAAI,MAAK,WAAa,SAAO,CAAG,GAEvC,KAAO;AAEL,sBAAgB,OAAK;ADtH3B,aAAI,CAAC,eAAc,eAAe,AAAC,KAAkB,CCsHvB;AACtB,eAAG,MAAM,AAAC,CAAC,ArBvHnB,MqBuHwB,CrBvHN,eAAc,WAAW,AAAC,CqBuHlB,GAAE,CrBvHkC,CAAC,CqBuHjC,CAAC;UACzB;AAAA,ADxHkE,MCyHpE;AAAA,IACF;AAQA,gBAAY,CAAZ,UAAa,AAAC,CAAE;AACd,AAAI,QAAA,CAAA,EAAC,EAAI,IAAI,QAAM,AAAC,EAAC,CAAC;AACtB,aAAO,KAAK,AAAC,CAAC,EAAC,CAAC,CAAC;AACjB,WAAO,GAAC,CAAC;IACX;AAAA,EACF,CAAC;ApBvID,AAAI,IAAA,CAAA,UAAS,EoByIE,MAAI,ApBzIc,CAAA;AoB2IjC,KAAI,CAAC,MAAK,MAAM,CAAG;AACjB,SAAK,MAAM,EAAI,GAAC,CAAC;EACnB;AAAA,AACA,OAAK,MAAM,MAAM,EAAI,MAAI,CAAC;AnB9I1B,SCAA,aAAwB;AAAE,uBAAwB;IAAE,EDA7B;;;;ALAvB,AAAI,IAAA,CAAA,YAAW,aAAoB,CAAC;ACApC,SAAS,QAAM,CAAE,IAAG,CAAG;AACf,SAAO,CAAA,eAAc,QAAQ,AAAC,YAAoB,KAAG,CAAC,CAAC;EACzD;AAAA,IwBFC,MAAI;IACJ,MAAI;IACJ,SAAO;ApBFd,WAAuB","sourceRoot":"/Users/gsoed/proj/spies/","sourcesContent":["var __moduleName = $__placeholder__0;","function require(path) {\n        return $traceurRuntime.require($__placeholder__0, path);\n      }","/**\n * Static class to create various fake objects.\n *\n * TODO: test this\n *\n * @class Fakes\n * @static\n */\nlet Fakes = {\n\n  /**\n   * Creates a fake of the given constructor. The fake object's proto link will simply point to the\n   * constructor's prototype.\n   *\n   * @method ofType\n   * @param {!Function} ctor The constructor of the object to create a fake of.\n   * @return {!Object} The fake object.\n   */\n  ofType(ctor) {\n    return {\n      __proto__: ctor.prototype\n    }\n  },\n\n  /**\n   * Creates a fake implementation of a NodeList.\n   *\n   * @method nodeList\n   * @param {!Array} data Array that represents the data in the NodeList.\n   * @return {!Object} A fake object mimicking a NodeList.\n   */\n  nodeList(data) {\n    return {\n      length: data.length,\n      item(i) {\n        return data[i];\n      },\n      __proto__: NodeList.prototype\n    };\n  }\n};\n\nexport default Fakes;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Fakes = Fakes;","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__default = $__placeholder__0","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","var $__placeholder__0 = $__placeholder__1","/**\n * Base class for matcher objects. These allow you to store arguments that have been pass into a\n * gunction call.\n * \n * @class Matcher\n */\nexport default class Matcher {\n\n  /**\n   * @constructor\n   */\n  constructor() {\n\n    /**\n     * Array of recorded arguments that matches.\n     *\n     * @property matchingArgs\n     * @type Array\n     */\n    this.matchingArgs = [];\n  }\n\n  /**\n   * Checks if the given argument matches the matcher. If so, records the invocation.\n   * @param  {Object=} arg The argument to be checked.\n   * @return {boolean} True iff the given argument is a match.\n   * @method registerInvocation\n   */\n  registerInvocation(arg) {\n    if (this.matches(arg)) {\n      this.matchingArgs.push(arg);\n      return true;\n    }\n\n    return false;\n  }\n};\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Matcher = Matcher;\n}","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","var $__default = $__placeholder__0","import Matcher from 'src/matcher/matcher';\n\n/**\n * Matches anything.\n * @class Any\n * @extends Matcher\n */\nexport default class Any extends Matcher {\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super.constructor();\n  }\n\n  /**\n   * @method matches\n   * @return {boolean} True. Always.\n   */\n  matches() {\n    return true;\n  }\n}","$traceurRuntime.superGet($__placeholder__0, $__placeholder__1, $__placeholder__2)","$__placeholder__0.call($__placeholder__1)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","import Matcher from 'src/matcher/matcher';\n\nlet _expectedType = Symbol();\n\n/**\n * Matches arguments that is the instance of the given ctor, or has the expected type.\n * @class IsA\n * @extends Matcher\n */\nexport default class IsA extends Matcher {\n\n  /**\n   * @param {Function|string} expectedType If function, this will check if the argument is an \n   *     instance of it. If a string, this will check if typeof argument is the specified string.\n   * @constructor\n   */\n  constructor(expectedType) {\n    super.constructor();\n    this[_expectedType] = expectedType;\n  }\n\n  /**\n   * @param {Object} arg Object to be checked.\n   * @return {boolean} True iff the given argument is an instance of the constructor.\n   * @method matches\n   */\n  matches(arg) {\n    if (this[_expectedType] instanceof Function) {\n      return arg instanceof this[_expectedType];\n    } else {\n      return typeof arg === this[_expectedType];\n    }\n  }\n}","(typeof $__placeholder__0 === 'undefined' ?\n          'undefined' : $__placeholder__1)","$traceurRuntime.typeof($__placeholder__0)","import IsA from 'src/matcher/isa';\nimport Any from 'src/matcher/any';\n\n/**\n * Static class to create \"Matcher\" objects.\n *\n * @class Matchers\n * @static\n */\nlet Matchers = {\n\n  /**\n   * Creates a matcher that matches by type.\n   *\n   * @method isA\n   * @param {Function|string} expectedType Type to be checked.\n   * @return {IsA} The IsA object.\n   */\n  isA(expectedType) {\n    return new IsA(expectedType);\n  },\n\n  /**\n   * @see  src/matcher/any\n   */\n  any() {\n    return new Any();\n  }\n};\n\nexport default Matchers;\n\nif (!window.spies) {\n  window.spies = {};\n}\n\nwindow.spies.Matchers = Matchers;\n","// symbols\nlet _scope = Symbol();\nlet _name = Symbol();\nlet _origFn = Symbol();\nlet _records = Symbol();\nlet _callOriginal = Symbol();\nlet _returnValue = Symbol();\n\n/**\n * Represents a function that is spied.\n * @class SpiedFn\n * @extends Function\n */\nexport default class SpiedFn extends Function {\n\n  /**\n   * @param {Object=} scope The scope that the function is in. If undefined, then the original \n   *     function will never be called and #restore will do nothing.\n   * @param {string} name The name of the function that is spied, or undefined if scope is null.\n   * @constructor\n   */\n  constructor(scope, name) {\n    let origFn = scope ? scope[name] : null;\n\n    let f = function(...args) {\n      f.record(args);\n      if (f[_callOriginal]) {\n        return origFn.apply(this, args);\n      }\n      return f[_returnValue];\n    };\n    f.__proto__ = SpiedFn.prototype;\n    f.constructor = SpiedFn;\n    f[_scope] = scope;\n    f[_name] = name;\n    f[_origFn] = origFn;\n    f[_callOriginal] = !!origFn;\n    f[_returnValue] = undefined;\n    f.records = [];\n\n    // Override the original function, if any.\n    if (scope) {\n      scope[name] = f;\n    }\n\n    return f;\n  }\n\n  /**\n   * Restores the spied function.\n   * @method restore\n   */\n  restore() {\n    if (this[_scope]) {\n      this[_scope][this[_name]] = this[_origFn];\n    }\n  }\n\n  /**\n   * Records a function call.\n   * \n   * @method record\n   * @param {Array} args Array containing arguments to the function call.\n   */\n  record(args) {\n    this.records.push(args);\n  }\n\n  /**\n   * Returns the given return value instead of the original function's.\n   *\n   * @method overrideReturn\n   * @param {Object=} returnValue Return value to return instead of calling the original function.\n   */\n  overrideReturn(returnValue) {\n    this[_callOriginal] = false;\n    this[_returnValue] = returnValue;\n  }\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.SpiedFn = SpiedFn;\n}\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","/**\n * Contains various utility functions.\n */\n\nimport Matcher from 'src/matcher/matcher';\n\n/**\n * Deep equals the two objects.\n * \n * @param  {*} obj1 The first object to compare.\n * @param  {*} obj2 The second object to compare.\n * @return {boolean} True iff the two objects are deeply equal.\n */\nexport function deepEqual(obj1, obj2) {\n  if (obj1 === obj2) {\n    return true;\n  }\n\n  if (obj1 instanceof Matcher) {\n    return obj1.registerInvocation(obj2);\n  }\n\n  if (obj2 instanceof Matcher) {\n    return obj2.registerInvocation(obj1);\n  }\n\n  if (!(obj1 instanceof Object) || !(obj2 instanceof Object)) {\n    return obj1 === obj2;\n  }\n\n  if (obj1 instanceof Array && obj1.length !== obj2.length) {\n    return false;\n  }\n\n  for (var key in obj1) {\n    if (!deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nif (window.TEST_MODE) {\n  if (!window.spies) {\n    window.spies = {};\n  }\n\n  window.spies.Utils = {\n    deepEqual\n  }\n}","if (!$traceurRuntime.isSymbolString($__placeholder__0)) $__placeholder__1","import SpiedFn from 'src/spiedfn';\nimport { deepEqual } from 'src/utils';\n\nlet spiedFns = [];\n\n/**\n * Root object for the library.\n *\n * @class Spies\n * @static\n */\nlet Spies = {\n\n  /**\n   * Creates a stub for the given constructor or object. All functions will be replaced by a noop\n   * function.\n   *\n   * @method stub\n   * @param  {!Function|Object} ctor The constructor to be stubbed, or object.\n   * @return {!Object} The stub object.\n   */\n  stub(target) {\n    let source = (typeof target === 'function')\n        ? target.prototype\n        : target;\n\n    let obj = { __proto__: source };\n    for (let prop in source) {\n      if (typeof source[prop] === 'function') {\n        obj[prop] = function() {};\n      } else if (typeof source[prop] === 'object') {\n        obj[prop] = this.stub(source[prop]);\n      }\n    }\n\n    return obj;\n  },\n\n  /**\n   * Spies the given function, or recursively all functions in the given object.\n   *\n   * @method spy\n   * @param {!Object} scope The Object to be spied on, or the object containing the function to \n   *     be spied on. \n   * @param {string=} name The name of the function to be spied on. If not specified, this will\n   *     spy all functions in the scope recursively.\n   * @return {Object|Function} The spied function, or the spied object.\n   */\n  spy(scope, name) {\n    if (name === undefined) {\n      // We are spying on an object.\n      for (let key in scope) {\n        if (scope[key] instanceof Function) {\n          this.spy(scope, key);\n        } else if (scope[key] instanceof Object) {\n          this.spy(scope[key], undefined);\n        }\n      }\n      return scope;\n    } else {\n      // We are spying on a function\n      let spiedFn = new SpiedFn(scope, name);\n      spiedFns.push(spiedFn);\n      return spiedFn;\n    }\n  },\n\n  /**\n   * Returns a function that returns the call count of the given target when called with the given\n   * arguments. For example: Spies.callCountOf(fn)(1, 2) returns the number of calls that function\n   * fn was called with arguments (1, 2).\n   *\n   * If the passed in function is not a spy, this will return 0.\n   *\n   * @method callCountOf\n   * @param {!Function} target The function whose call count should be returned.\n   * @return {!Function} Function that returns the call counts of the given function.\n   */\n  callCountOf(target) {\n    let record = target.records || [];\n    return (...args) => {\n      let invocations = record.filter(recordedArgs => {\n        return deepEqual(recordedArgs, args);\n      });\n      return invocations.length;\n    };\n  },\n\n  /**\n   * Returns the number of call counts for the target of any arguments.\n   *\n   * @method anyCallCountOf\n   * @param {!Function} target The function whose call count should be returned.\n   * @return {number} Number of invocations on the given function.\n   */\n  anyCallCountOf(target) {\n    return target.records.length;\n  },\n\n  /**\n   * Restores the given function or recursively all functions in the given object to its original\n   * implementation and removes all records related to it. Or, restores all known functions, if no\n   * arguments is given.\n   *\n   * @method reset\n   * @param {Function|Object|undefined} target The function or object to be reset, or undefined.\n   */\n  reset(target) {\n    if (!target) {\n      spiedFns.forEach(spiedFn => spiedFn.restore());\n      spiedFns = [];\n    } else if (target instanceof SpiedFn) {\n      target.restore();\n      spiedFns.splice(spiedFns.indexOf(target), 1);\n    } else if (target instanceof Function) {\n      // Do nothing, this is an unspied function.\n    } else {\n      // Go through every member of the object and resets it.\n      for (let key in target) {\n        this.reset(target[key]);\n      }\n    }\n  },\n\n  /**\n   * Creates a spied function.\n   *\n   * @method spiedFunction\n   * @return {SpiedFn} Spied function.\n   */\n  spiedFunction() {\n    let fn = new SpiedFn();\n    spiedFns.push(fn);\n    return fn;\n  }\n};\n\nexport default Spies;\n\nif (!window.spies) {\n  window.spies = {};\n}\nwindow.spies.Spies = Spies;\n","import Fakes from 'src/fakes';\nimport Spies from 'src/spies';\nimport Matchers from 'src/matcher/matchers';"]}